
indexer
{
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /home/g/Documents/lobsters/log/development.searchd.log
  query_log = /home/g/Documents/lobsters/log/development.searchd.query.log
  pid_file = /home/g/Documents/lobsters/log/development.sphinx.pid
  workers = threads
  binlog_path = /home/g/Documents/lobsters/tmp/binlog/development
}

source comment_core_0
{
  type = pgsql
  sql_host = ec2-54-163-234-163.compute-1.amazonaws.com
  sql_user = gdtlvizuwtunqi
  sql_pass = HznbJoe9cUkFhgEW23evZiON36
  sql_db = dtun5sg5koo2d
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "comments"."id" * 4 + 0 AS "id", comments."comment" AS "comment", comments."short_id" AS "short_id", users."username" AS "author", comments."id" AS "sphinx_internal_id", 'Comment' AS "sphinx_internal_class", 0 AS "sphinx_deleted", (CAST(upvotes AS integer) - CAST(downvotes AS integer)) AS "score", comments."is_deleted" AS "is_deleted", extract(epoch from comments."created_at")::int AS "created_at" FROM "comments" LEFT OUTER JOIN "users" ON "users"."id" = "comments"."user_id" WHERE ("comments"."id" BETWEEN $start AND $end AND "comments"."is_deleted" = 'f' AND "comments"."is_moderated" = 'f') GROUP BY "comments"."id", comments."comment", comments."short_id", users."username", comments."id", comments."is_deleted", comments."created_at"
  sql_query_range = SELECT COALESCE(MIN("comments"."id"), 1), COALESCE(MAX("comments"."id"), 1) FROM "comments"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_bool = is_deleted
  sql_attr_bigint = score
  sql_attr_timestamp = created_at
  sql_attr_string = sphinx_internal_class
  sql_query_info = SELECT "comments".* FROM "comments"  WHERE ("comments"."id" = ($id - 0) / 4)
}

index comment_core
{
  type = plain
  path = /home/g/Documents/lobsters/db/sphinx/development/comment_core
  docinfo = extern
  charset_type = utf-8
  source = comment_core_0
}

source story_core_0
{
  type = pgsql
  sql_host = ec2-54-163-234-163.compute-1.amazonaws.com
  sql_user = gdtlvizuwtunqi
  sql_pass = HznbJoe9cUkFhgEW23evZiON36
  sql_db = dtun5sg5koo2d
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "stories"."id" * 4 + 1 AS "id", stories."description" AS "description", stories."short_id" AS "short_id", array_to_string(array_agg(DISTINCT tags."tag"), ' ') AS "tags", stories."title" AS "title", stories."url" AS "url", users."username" AS "author", stories."story_cache" AS "story_cache", stories."id" AS "sphinx_internal_id", 'Story' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from stories."created_at")::int AS "created_at", stories."hotness" AS "hotness", stories."is_expired" AS "is_expired", (CAST(upvotes AS integer) - CAST(downvotes AS integer)) AS "score", stories."id" AS "story_id" FROM "stories" LEFT OUTER JOIN "taggings" ON "taggings"."story_id" = "stories"."id" LEFT OUTER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" LEFT OUTER JOIN "users" ON "users"."id" = "stories"."user_id" WHERE ("stories"."id" BETWEEN $start AND $end AND "stories"."is_expired" = 0) GROUP BY "stories"."id", stories."description", stories."short_id", stories."title", stories."url", users."username", stories."story_cache", stories."id", stories."created_at", stories."hotness", stories."is_expired", stories."id"
  sql_query_range = SELECT COALESCE(MIN("stories"."id"), 1), COALESCE(MAX("stories"."id"), 1) FROM "stories"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = is_expired
  sql_attr_uint = story_id
  sql_attr_bigint = score
  sql_attr_timestamp = created_at
  sql_attr_float = hotness
  sql_attr_string = sphinx_internal_class
  sql_query_info = SELECT "stories".* FROM "stories"  WHERE ("stories"."id" = ($id - 1) / 4)
}

index story_core
{
  type = plain
  path = /home/g/Documents/lobsters/db/sphinx/development/story_core
  docinfo = extern
  charset_type = utf-8
  source = story_core_0
}

index comment
{
  type = distributed
  local = comment_core
}

index story
{
  type = distributed
  local = story_core
}
